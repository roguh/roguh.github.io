<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Hugo O. Rivera's website</title><link>/tags/python/</link><description>Recent content in Python on Hugo O. Rivera's website</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Async Python Tricks</title><link>/tutorials/python_asyncio/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio/</guid><description>Starting an Async Program In Python 3.7 and above, you can use asyncio.run to easily start your async program:
async def async_main(): await asyncio.sleep(1) print(&amp;quot;Async&amp;quot;) def main(): asyncio.run(async_main(), debug=True) if __name__ == &amp;quot;__main__&amp;quot;: main() Alternatives To run an async program in other ways, you need to use the loop directly.
loop = asyncio.get_running_loop() loop.run_until_complete if you have one function you need to run loop.run_forever if you never want to close the async loop Running blocking synchronous functions after Python 3.</description></item><item><title>Async Python: Debug Mode and Warnings</title><link>/tutorials/python_asyncio_warnings/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio_warnings/</guid><description>Enable asyncio Debug Mode See the Python docs for all the ways to turn on async debug mode.
Warnings about blocking async code In debug mode, you will get warnings about async code that blocks for too long as well as other warnings.
Example code:
import asyncio import time async def blocks(): print(&amp;quot;START&amp;quot;) # Synchronous blocking code time.sleep(0.35) await asyncio.sleep(0.5) # Synchronous blocking code time.sleep(0.15) await asyncio.sleep(0.1) print(&amp;quot;DONE&amp;quot;) asyncio.run(blocks(), debug=True) Output:</description></item><item><title>Intro to programming using Python at Equipo Academyâ€™s College Simulation Day</title><link>/tutorials/intro_to_cs.equipo/</link><pubDate>Sun, 21 Nov 2021 22:53:34 -0700</pubDate><guid>/tutorials/intro_to_cs.equipo/</guid><description>A programming tutorial given over the years.</description></item><item><title>Configuration files for Linux/MacOS</title><link>/projects/confs/</link><pubDate>Sun, 21 Nov 2021 20:47:09 +0000</pubDate><guid>/projects/confs/</guid><description>My dotfiles and a script to quickly backup and restore them.</description></item><item><title>the_long_count</title><link>/projects/the_long_count/</link><pubDate>Sun, 26 Jan 2020 19:47:09 +0000</pubDate><guid>/projects/the_long_count/</guid><description>Some functions for computing using the Long Count, a Mayan numeric system for dates.</description></item><item><title>hrpypy</title><link>/projects/hrpypy/</link><pubDate>Sun, 26 Jan 2020 09:29:12 +0000</pubDate><guid>/projects/hrpypy/</guid><description>Mini Python interpreter in Python by Hugo O. Rivera Calzadillas</description></item><item><title>i3empty</title><link>/projects/i3empty/</link><pubDate>Wed, 11 Dec 2019 02:28:44 +0000</pubDate><guid>/projects/i3empty/</guid><description>Quickly switch to a new numbered workspace. Utility for the i3 window manager.</description></item><item><title>Programmer-for-hire</title><link>/swe/</link><pubDate>Tue, 08 Oct 2019 19:10:58 -0700</pubDate><guid>/swe/</guid><description>I may be available for software engineering contracting work.
With my full stack skillset, I can create (or update) a website, webapp, or Android app from start to finish.
Programming Languages I know the following languages:
Python including Tensorflow and other machine learning and data science tools. JavaScript including ES6, NodeJS, and other web development tools C C++, including Qt and the language QML Java Haskell Elm Lisp Rust I have experience with the Linux operating system.</description></item><item><title>Tutoring</title><link>/tutoring/</link><pubDate>Tue, 08 Oct 2019 19:10:58 -0700</pubDate><guid>/tutoring/</guid><description>I am your math, language, and programming tutor Qualifications: I worked as a tutor at the Computer Science department of the New Mexico Institute of Mining and Technology for two years. I have a degree in mathematics and a degree in computer science from the same school, where I graduated with a 3.5 GPA in 4.5 years. I tutored middle-school as part of the Growing Up Thinking Scientifically (GUTS) program and high-school students in the Supercomputing Challenge.</description></item><item><title>Linux and MacOS configuration files</title><link>/confs/</link><pubDate>Sat, 07 Sep 2019 12:47:07 -0700</pubDate><guid>/confs/</guid><description>My portable, personal, developer-centric setup for common Linux and MacOS tools.</description></item><item><title>pympw</title><link>/projects/pympw/</link><pubDate>Fri, 12 Jul 2019 08:09:41 +0000</pubDate><guid>/projects/pympw/</guid><description>A Python implementation of the Master Password algorithm v3 with a nice Linux CLI</description></item><item><title>polybar-themer</title><link>/projects/polybar-themer/</link><pubDate>Thu, 15 Nov 2018 07:04:41 +0000</pubDate><guid>/projects/polybar-themer/</guid><description>A theme generator for polybar, a popular status bar for Linux. Uses math and advanced YAML parsing to generate colorful, sensible color schemes.</description></item><item><title>cuda-fft</title><link>/projects/cuda-fft/</link><pubDate>Sat, 24 Mar 2018 22:53:20 +0000</pubDate><guid>/projects/cuda-fft/</guid><description>Yet another FFT implementation in CUDA. Includes benchmarks using simple data for comparing different implementations.</description></item><item><title>Code for a statistics class</title><link>/projects/email-classifier/</link><pubDate>Mon, 17 Apr 2017 01:17:20 +0000</pubDate><guid>/projects/email-classifier/</guid><description>Email classifier A machine learning project for classifying emails into spam and ham. Uses C for preprocessing emails, Python for parsing and extracting low-level features of emails, and a few lines of Matlab for running several classic classifiers.
See github.com/roguh/email-classifier
Hopfield testing These Python scripts can be used to test the recall effectiveness of Hopfield Networks. A sample dataset composed of the Walsh vectors, an orthogonal system is included by default.</description></item><item><title>New Mexico Tech's Introduction to Python and Programming Labs (CS 107)</title><link>/tutorials/nmt_python_labs_cs107/</link><pubDate>Mon, 01 Aug 2016 22:53:34 -0700</pubDate><guid>/tutorials/nmt_python_labs_cs107/</guid><description>Carefully written and formatted. I wrote much of the copy-editing and some of the LaTeX for this year&amp;rsquo;s version of the labs.</description></item></channel></rss>