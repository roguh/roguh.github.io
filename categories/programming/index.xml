<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Hugo O. Rivera's website</title><link>/categories/programming/</link><description>Recent content in programming on Hugo O. Rivera's website</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Async Python Tricks</title><link>/tutorials/python_asyncio/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio/</guid><description>Starting an Async Program In Python 3.7 and above, you can use asyncio.run to easily start your async program:
async def async_main(): await asyncio.sleep(1) print(&amp;#34;Async&amp;#34;) def main(): asyncio.run(async_main(), debug=True) if __name__ == &amp;#34;__main__&amp;#34;: main() Alternatives To run an async program in other ways, you need to use the loop directly.
loop = asyncio.get_running_loop() loop.run_until_complete if you have one function you need to run loop.run_forever if you never want to close the async loop Running blocking synchronous functions after Python 3.</description></item><item><title>Async Python: Debug Mode and Warnings</title><link>/tutorials/python_asyncio_warnings/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio_warnings/</guid><description>Enable asyncio Debug Mode See the Python docs for all the ways to turn on async debug mode.
Warnings about blocking async code In debug mode, you will get warnings about async code that blocks for too long as well as other warnings.
Example code:
import asyncio import time async def blocks(): print(&amp;#34;START&amp;#34;) # Synchronous blocking code time.sleep(0.35) await asyncio.sleep(0.5) # Synchronous blocking code time.sleep(0.15) await asyncio.sleep(0.1) print(&amp;#34;DONE&amp;#34;) asyncio.run(blocks(), debug=True) Output:</description></item><item><title>Intro to programming using Python at Equipo Academy’s College Simulation Day</title><link>/tutorials/intro_to_cs.equipo/</link><pubDate>Sun, 21 Nov 2021 22:53:34 -0700</pubDate><guid>/tutorials/intro_to_cs.equipo/</guid><description>A programming tutorial given over the years.</description></item><item><title>Configuration files for Linux/MacOS</title><link>/projects/confs/</link><pubDate>Sun, 21 Nov 2021 20:47:09 +0000</pubDate><guid>/projects/confs/</guid><description>My dotfiles and a script to quickly backup and restore them.</description></item><item><title>Shellscripts: parallely, gp, and makeanywhere</title><link>/projects/shellscripts/</link><pubDate>Sun, 21 Nov 2021 19:47:09 +0000</pubDate><guid>/projects/shellscripts/</guid><description>Several useful shellscripts</description></item><item><title>pipemath</title><link>/projects/pipemath/</link><pubDate>Fri, 19 Nov 2021 12:29:11 +0000</pubDate><guid>/projects/pipemath/</guid><description>Run math functions on number from stdin</description></item><item><title>rust-api</title><link>/projects/rust_api/</link><pubDate>Sun, 07 Nov 2021 12:29:11 +0000</pubDate><guid>/projects/rust_api/</guid><description>A proof of concept for a full featured Rust HTTP API</description></item><item><title>the_long_count</title><link>/projects/the_long_count/</link><pubDate>Sun, 26 Jan 2020 19:47:09 +0000</pubDate><guid>/projects/the_long_count/</guid><description>Some functions for computing using the Long Count, a Mayan numeric system for dates.</description></item><item><title>hrpypy</title><link>/projects/hrpypy/</link><pubDate>Sun, 26 Jan 2020 09:29:12 +0000</pubDate><guid>/projects/hrpypy/</guid><description>Mini Python interpreter in Python by Hugo O. Rivera Calzadillas</description></item><item><title>rust-ls</title><link>/projects/rust-ls/</link><pubDate>Fri, 27 Dec 2019 12:29:11 +0000</pubDate><guid>/projects/rust-ls/</guid><description>List all files in a directory</description></item><item><title>i3empty</title><link>/projects/i3empty/</link><pubDate>Wed, 11 Dec 2019 02:28:44 +0000</pubDate><guid>/projects/i3empty/</guid><description>Quickly switch to a new numbered workspace. Utility for the i3 window manager.</description></item><item><title>Interview Prep</title><link>/posts/interview-prep/</link><pubDate>Fri, 11 Oct 2019 15:50:39 -0700</pubDate><guid>/posts/interview-prep/</guid><description>Advice I found useful.</description></item><item><title>Linux and MacOS configuration files</title><link>/confs/</link><pubDate>Sat, 07 Sep 2019 12:47:07 -0700</pubDate><guid>/confs/</guid><description>My portable, personal, developer-centric setup for common Linux and MacOS tools.</description></item><item><title>pympw</title><link>/projects/pympw/</link><pubDate>Fri, 12 Jul 2019 08:09:41 +0000</pubDate><guid>/projects/pympw/</guid><description>A Python implementation of the Master Password algorithm v3 with a nice Linux CLI</description></item><item><title>polybar-themer</title><link>/projects/polybar-themer/</link><pubDate>Thu, 15 Nov 2018 07:04:41 +0000</pubDate><guid>/projects/polybar-themer/</guid><description>A theme generator for polybar, a popular status bar for Linux. Uses math and advanced YAML parsing to generate colorful, sensible color schemes.</description></item><item><title>Parser and Interpreter in OCaml</title><link>/projects/hrclox/</link><pubDate>Thu, 12 Jul 2018 20:21:47 +0000</pubDate><guid>/projects/hrclox/</guid><description>Lox interpreter written in OCaml by Hugo O. Rivera Calzadillas. See github.com/roguh/hrclox.
Based off https://craftinginterpreters.com.
Boilerplate code for writing parsers in OCaml using Menhir + sedlex See github.com/roguh/ocaml-parsing
(Unfinished, but the parser is fairly complete)</description></item><item><title>cuda-fft</title><link>/projects/cuda-fft/</link><pubDate>Sat, 24 Mar 2018 22:53:20 +0000</pubDate><guid>/projects/cuda-fft/</guid><description>Yet another FFT implementation in CUDA. Includes benchmarks using simple data for comparing different implementations.</description></item><item><title>Pandoc wrappers</title><link>/projects/pandoc/</link><pubDate>Sat, 24 Mar 2018 08:12:21 +0000</pubDate><guid>/projects/pandoc/</guid><description>Shortcuts and templates for writing résumés, math homework, and cheatsheets in Pandoc.</description></item><item><title>tetris-for-two</title><link>/projects/tetris-for-two/</link><pubDate>Wed, 13 Sep 2017 05:13:47 +0000</pubDate><guid>/projects/tetris-for-two/</guid><description>Tetris for two. A fun tetris game with many different game modes</description></item><item><title>PhotoFest</title><link>/projects/photofest/</link><pubDate>Thu, 10 Aug 2017 02:06:38 +0000</pubDate><guid>/projects/photofest/</guid><description>PhotoFest is a secure self-hosted flat-file photo collection webapp written in Rust (unfinished)</description></item><item><title>Code for a statistics class</title><link>/projects/email-classifier/</link><pubDate>Mon, 17 Apr 2017 01:17:20 +0000</pubDate><guid>/projects/email-classifier/</guid><description>Email classifier A machine learning project for classifying emails into spam and ham. Uses C for preprocessing emails, Python for parsing and extracting low-level features of emails, and a few lines of Matlab for running several classic classifiers.
See github.com/roguh/email-classifier
Hopfield testing These Python scripts can be used to test the recall effectiveness of Hopfield Networks. A sample dataset composed of the Walsh vectors, an orthogonal system is included by default.</description></item><item><title>Early Haskell Projects</title><link>/projects/earlyhaskell/</link><pubDate>Mon, 03 Oct 2016 15:50:31 +0000</pubDate><guid>/projects/earlyhaskell/</guid><description>SCMinHS A Scheme Implementation in Haskell. Followed &amp;ldquo;Write Yourself a Scheme in 48 Hours. See github.com/roguh/SCMinHS.
coolnoise Parser and generator for programs written in the Classroom Object-Oriented Language. Eases testing of lexer and parser. See github.com/roguh/coolnoise.
An interpreter for the low-level CORE language Haskell was once compiled to a language called CORE.
See github.com/roguh/CORE</description></item><item><title>New Mexico Tech's Introduction to Python and Programming Labs (CS 107)</title><link>/tutorials/nmt_python_labs_cs107/</link><pubDate>Mon, 01 Aug 2016 22:53:34 -0700</pubDate><guid>/tutorials/nmt_python_labs_cs107/</guid><description>Carefully written and formatted. I wrote much of the copy-editing and some of the LaTeX for this year&amp;rsquo;s version of the labs.</description></item><item><title>cv-composer</title><link>/projects/cv-composer/</link><pubDate>Thu, 30 Jun 2016 21:49:43 +0000</pubDate><guid>/projects/cv-composer/</guid><description>Command-line based computer vision algorithms showcase. Uses the OpenCV C++ library.</description></item><item><title>Animated Periodic Table D3</title><link>/projects/animated-periodic-table-d3/</link><pubDate>Mon, 22 Jun 2015 18:25:30 +0000</pubDate><guid>/projects/animated-periodic-table-d3/</guid><description>A periodic table created in CoffeeScript and D3 with animated transitions.</description></item></channel></rss>