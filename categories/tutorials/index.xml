<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on roguh's website</title><link>/categories/tutorials/</link><description>Recent content in Tutorials on roguh's website</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Async Python Tricks</title><link>/tutorials/python_asyncio/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio/</guid><description>Starting an Async Program In Python 3.7 and above, you can use asyncio.run to easily start your async program:
async def async_main(): await asyncio.sleep(1) print(&amp;#34;Async&amp;#34;) def main(): asyncio.run(async_main(), debug=True) if __name__ == &amp;#34;__main__&amp;#34;: main() Alternatives To run an async program in other ways, you need to use the loop directly.
loop = asyncio.get_running_loop() loop.run_until_complete if you have one function you need to run loop.run_forever if you never want to close the async loop Running blocking synchronous functions after Python 3.</description></item><item><title>Async Python: Debug Mode and Warnings</title><link>/tutorials/python_asyncio_warnings/</link><pubDate>Mon, 27 Dec 2021 00:00:00 +0000</pubDate><guid>/tutorials/python_asyncio_warnings/</guid><description>Enable asyncio Debug Mode See the Python docs for all the ways to turn on async debug mode.
Warnings about blocking async code In debug mode, you will get warnings about async code that blocks for too long as well as other warnings.
Example code:
import asyncio import time async def blocks(): print(&amp;#34;START&amp;#34;) # Synchronous blocking code time.sleep(0.35) await asyncio.sleep(0.5) # Synchronous blocking code time.sleep(0.15) await asyncio.sleep(0.1) print(&amp;#34;DONE&amp;#34;) asyncio.run(blocks(), debug=True) Output:</description></item><item><title>Intro to programming using Python at Equipo Academyâ€™s College Simulation Day</title><link>/tutorials/intro_to_cs.equipo/</link><pubDate>Sun, 21 Nov 2021 22:53:34 -0700</pubDate><guid>/tutorials/intro_to_cs.equipo/</guid><description>A programming tutorial given over the years.</description></item><item><title>Some General Cybersecurity Advice</title><link>/tutorials/cybersec/</link><pubDate>Sat, 07 Sep 2019 04:04:16 -0700</pubDate><guid>/tutorials/cybersec/</guid><description>A mishmash of what could be common-sense security tips and other ideas for preventing security leaks on personal devices.</description></item><item><title>New Mexico Tech's Introduction to Python and Programming Labs (CS 107)</title><link>/tutorials/nmt_python_labs_cs107/</link><pubDate>Mon, 01 Aug 2016 22:53:34 -0700</pubDate><guid>/tutorials/nmt_python_labs_cs107/</guid><description>Carefully written and formatted. I wrote much of the copy-editing and some of the LaTeX for this year&amp;rsquo;s version of the labs.</description></item><item><title>Notes on Chemistry the Central Science</title><link>/tutorials/chemistry_the_central_science/</link><pubDate>Tue, 01 Dec 2015 22:53:34 -0700</pubDate><guid>/tutorials/chemistry_the_central_science/</guid><description>See github.com/roguh/chemistry_the_central_science.</description></item><item><title>Notes on Perception for Design</title><link>/tutorials/perception_for_design/</link><pubDate>Tue, 01 Dec 2015 22:53:34 -0700</pubDate><guid>/tutorials/perception_for_design/</guid><description>I took concise notes based on the excellent, scientifically-rigorous textbook Information Visualization: Perception for Design by Colin Ware. I created this PDF using LaTeX, which allowed me the flexibility to create an easy-to-edit, elegant, and compact document layout. I highly recommend the book and these notes for anyone that needs to create data visualizations.
See here.</description></item></channel></rss>